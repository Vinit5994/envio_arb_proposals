type TransparentUpgradeableProxy_AdminChanged {
  id: ID!
  previousAdmin: String!
  newAdmin: String!
}

type TransparentUpgradeableProxy_BeaconUpgraded {
  id: ID!
  beacon: String!
}

type TransparentUpgradeableProxy_Initialized {
  id: ID!
  version: BigInt!
}

type TransparentUpgradeableProxy_LateQuorumVoteExtensionSet {
  id: ID!
  oldVoteExtension: BigInt!
  newVoteExtension: BigInt!
}

type TransparentUpgradeableProxy_OwnershipTransferred {
  id: ID!
  previousOwner: String!
  newOwner: String!
}

type TransparentUpgradeableProxy_ProposalCanceled {
  id: ID!
  proposalId: BigInt!
}

type TransparentUpgradeableProxy_ProposalCreated {
  id: ID!
  proposalId: BigInt!
  proposer: String!
  targets: [String!]!
  values: [BigInt!]!
  signatures: [String!]!
  calldatas: [String!]!
  startBlock: BigInt!
  endBlock: BigInt!
  description: String!
}

type TransparentUpgradeableProxy_ProposalExecuted {
  id: ID!
  proposalId: BigInt!
}

type TransparentUpgradeableProxy_ProposalExtended {
  id: ID!
  proposalId: BigInt!
  extendedDeadline: BigInt!
}

type TransparentUpgradeableProxy_ProposalQueued {
  id: ID!
  proposalId: BigInt!
  eta: BigInt!
}

type TransparentUpgradeableProxy_ProposalThresholdSet {
  id: ID!
  oldProposalThreshold: BigInt!
  newProposalThreshold: BigInt!
}

type TransparentUpgradeableProxy_QuorumNumeratorUpdated {
  id: ID!
  oldQuorumNumerator: BigInt!
  newQuorumNumerator: BigInt!
}

type TransparentUpgradeableProxy_TimelockChange {
  id: ID!
  oldTimelock: String!
  newTimelock: String!
}

type TransparentUpgradeableProxy_Upgraded {
  id: ID!
  implementation: String!
}

type TransparentUpgradeableProxy_VoteCast {
  id: ID!
  voter: String!
  proposalId: BigInt!
  support: BigInt!
  weight: BigInt!
  reason: String!
}

type TransparentUpgradeableProxy_VoteCastWithParams {
  id: ID!
  voter: String!
  proposalId: BigInt!
  support: BigInt!
  weight: BigInt!
  reason: String!
  params: String!
}

type TransparentUpgradeableProxy_VotingDelaySet {
  id: ID!
  oldVotingDelay: BigInt!
  newVotingDelay: BigInt!
}

type TransparentUpgradeableProxy_VotingPeriodSet {
  id: ID!
  oldVotingPeriod: BigInt!
  newVotingPeriod: BigInt!
}

